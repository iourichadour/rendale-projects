import IMSH_LADP:*;
import IMSH_LADP:Base:*;
import IMSH_LADP:Controllers:*;
import IMSH_LADP:Models:*;
import IMSH_LADP:Workflow:*;
import IMSH_LADP:Types:*;
import IMSH_LADP:Views:*;

class Controller_IMSH_LADP_FORM extends IMSH_LADP:Controllers:BaseController
   method Controller_IMSH_LADP_FORM();
   
   /* action methods */
   method PreBuild();
   method status_next();
   method status_back();
   method render_form();
   method render_confirmation();
   method display_confirmation();
   method cancel_status_change();
   method initialize_dev_plan_item();
   method initialize_education_item();
   
   /* factories */
   property IMSH_LADP:Workflow:NotificationFactory notification_factory;
   
   /* models */
   property IMSH_LADP:Models:Employee employee;
   property IMSH_LADP:Models:Employee manager;
   property IMSH_LADP:Models:LadpDocument document;
   
   property array of IMSH_LADP:Model education;
   property array of IMSH_LADP:Model certifications;
   property array of IMSH_LADP:Model training;
   property array of IMSH_LADP:Model languages;
   
   property Rowset rs_education;
   property Rowset rs_certifications;
   property Rowset rs_languages;
   property Rowset rs_training;
   property Rowset rs_relocation;
   property Rowset rs_prior_pos;
   
   /* convenience properties */
   property string employee_current_perf_rating;
   property string employee_previous_perf_rating;
   property string employee_current_perf_year;
   property string employee_previous_perf_year;
   
   property array of string prior_ladp_results;
   
end-class;

method Controller_IMSH_LADP_FORM
   %Super = create IMSH_LADP:Controllers:BaseController();
   %This.notification_factory = create IMSH_LADP:Workflow:NotificationFactory();
   %This.prior_ladp_results = CreateArrayRept("", 0);
   
end-method;







method render_confirmation
   Local IMSH_LADP:View &view;
   &view = create IMSH_LADP:Views:ConfirmationView(%This);
   &view.render(%This.arguments);
end-method;

method render_form
   
   Local IMSH_LADP:Types:Arguments &args;
   Local IMSH_LADP:View &view;
   
   try
      %This.employee_current_perf_rating = %This.employee.find_performance_rating_by_date(%Date).GetField(Field.REVIEW_RATING).Value;
      %This.employee_previous_perf_rating = %This.employee.find_performance_rating_by_date(%This.employee.find_performance_rating_by_date(%Date).GetField(Field.EFFDT).Value - 1).GetField(Field.REVIEW_RATING).Value;
      %This.employee_current_perf_year = String(Year(%This.employee.find_performance_rating_by_date(%Date).GetField(Field.REVIEW_THRU_DT).Value));
      %This.employee_previous_perf_year = String(Year(%This.employee.find_performance_rating_by_date(%This.employee.find_performance_rating_by_date(%Date).GetField(Field.EFFDT).Value - 1).GetField(Field.REVIEW_THRU_DT).Value));
   catch Exception &e
      
   end-try;
   Evaluate %Menu
   When "IMSH_LADP_EMP"
      &view = CreateObject("IMSH_LADP:Views:FormViewEmployee", %This);
      Break;
   When "IMSH_LADP_MGR"
      &view = CreateObject("IMSH_LADP:Views:FormViewManager", %This);
      Break;
   When "IMSH_LADP_HR"
      &view = CreateObject("IMSH_LADP:Views:FormViewHR", %This);
      Break;
   End-Evaluate;
   &view.render(&args);
end-method;

method PreBuild
   /* set rowsets */
   /* todo switch to models */
   %This.document = CreateObject("IMSH_LADP:Models:LadpDocument", GetLevel0()(1).IMSH_LADP);
   
   Local string &prior_result;
   Local SQL &prior_results_sql = CreateSQL("SELECT COMMENTS FROM PS_IMSH_LADP_RES A, PS_IMSH_LADP B WHERE A.IMSH_LADP_ID = B.IMSH_LADP_ID AND YEAR(B.PERIOD_END_DT) = (YEAR(%datein(:1)) - 1) AND B.EMPLID = :2 ORDER BY A.IMSH_ITEM_ID", %This.document.GetField(Field.PERIOD_END_DT).Value, %This.document.GetField(Field.EMPLID).Value);
   While &prior_results_sql.Fetch(&prior_result)
      %This.prior_ladp_results.Push(&prior_result);
   End-While;
   
   %This.rs_education = GetLevel0()(1).GetRowset(Scroll.IMSH_LADPEDU_VW);
   %This.rs_certifications = GetLevel0()(1).GetRowset(Scroll.IMSH_LADPCRT_VW);
   %This.rs_languages = GetLevel0()(1).GetRowset(Scroll.IMSH_LADPLNG_VW);
   %This.rs_training = GetLevel0()(1).GetRowset(Scroll.TRAINING);
   %This.rs_prior_pos = GetLevel0()(1).GetRowset(Scroll.IMSH_PRIOR_POS);
   
   %This.rs_education.Select(Record.IMSH_LADPEDU_VW, "Where emplid = :1", IMSH_LADP.EMPLID.Value);
   %This.rs_certifications.Select(Record.IMSH_LADPCRT_VW, "Where emplid = :1", IMSH_LADP.EMPLID.Value);
   %This.rs_languages.Select(Record.IMSH_LADPLNG_VW, "Where emplid = :1", IMSH_LADP.EMPLID.Value);
   %This.rs_training.Select(Record.TRAINING, "Where emplid = :1", IMSH_LADP.EMPLID.Value);
   %This.rs_prior_pos.Select(Record.IMSH_PRIOR_POS, "Where emplid = :1", IMSH_LADP.EMPLID.Value);
   
   /* sort the grids */
   %This.rs_prior_pos.Sort(IMSH_PRIOR_POS.IMSH_ITEM_ID, "A");
   %This.rs_education.Sort(IMSH_LADPEDU_VW.IMSH_YEAR, "D");
   %This.rs_certifications.Sort(IMSH_LADPCRT_VW.IMSH_YEAR, "D");
   %This.rs_training.Sort(TRAINING.IMSH_YEAR, "D");
   
   /* get the employee */
   %This.employee = CreateObject("IMSH_LADP:Models:Employee");
   %This.employee.GetField(Field.EMPLID).Value = IMSH_LADP.EMPLID.Value;
   %This.employee.SelectByKey();
   %This.employee.populate_development_plan(String(Year(%This.document.GetField(Field.PERIOD_END_DT).Value)));
   
   
   %This.manager = %This.employee.find_manager();
end-method;

/* STATUS METHODS */
method display_confirmation
   Local integer &a;
   DoSaveNow();
   /* required dates */
   If %This.document.status = "IP" And
         %This.document.GetField(Field.EMPLID).Value = %EmployeeId Then
      For &a = 1 To %This.rs_prior_pos.ActiveRowCount
         If None(%This.rs_prior_pos.GetRow(&a).IMSH_PRIOR_POS.FROM_DT.Value, %This.rs_prior_pos.GetRow(&a).IMSH_PRIOR_POS.THRU_DT.Value, %This.rs_prior_pos.GetRow(&a).IMSH_PRIOR_POS.DESCR100.Value) And
               Not %This.rs_prior_pos.GetRow(&a).IsNew Then
            IMSH_LADP_WRK.IMSH_CARRIER.Value = Left(IMSH_LADP_WRK.IMSH_CARRIER.Value, Len(IMSH_LADP_WRK.IMSH_CARRIER.Value) - 1) | ", 'tab': '2'}";
            Error "Please Add Employment Dates for each Employment History item before submitting.";
         End-If;
      End-For;
      
      For &a = 1 To %This.rs_certifications.ActiveRowCount
         If None(%This.rs_certifications.GetRow(&a).IMSH_LADPCRT_VW.DT_ISSUED.Value, %This.rs_certifications.GetRow(&a).IMSH_LADPCRT_VW.IMSH_YEAR.Value) And
               Not %This.rs_certifications.GetRow(&a).IsNew Then
            IMSH_LADP_WRK.IMSH_CARRIER.Value = Left(IMSH_LADP_WRK.IMSH_CARRIER.Value, Len(IMSH_LADP_WRK.IMSH_CARRIER.Value) - 1) | ", 'tab': '2'}";
            Error "Please Add Issue Dates for each Certification before submitting.";
         End-If;
      End-For;
      
      For &a = 1 To %This.rs_training.ActiveRowCount
         If None(%This.rs_training.GetRow(&a).TRAINING.COURSE_START_DT.Value, %This.rs_training.GetRow(&a).TRAINING.IMSH_YEAR.Value) And
               Not %This.rs_training.GetRow(&a).IsNew Then
            IMSH_LADP_WRK.IMSH_CARRIER.Value = Left(IMSH_LADP_WRK.IMSH_CARRIER.Value, Len(IMSH_LADP_WRK.IMSH_CARRIER.Value) - 1) | ", 'tab': '2'}";
            Error "Please Add Course Dates for each Training Course before submitting.";
         End-If;
      End-For;
   End-If;
   
   TransferPage(Page.IMSH_LADP_CONFIRM);
end-method;

method cancel_status_change
   DoSaveNow();
   TransferPage(Page.IMSH_LADP_FORM);
end-method;

method status_next
   Local string &current_status, &new_status;
   &current_status = %This.document.status;
   
   %This.document.status_next();
   &new_status = %This.document.status;
   try
      Local IMSH_LADP:Base:LadpNotification &notification = %This.notification_factory.create_notification(%This.document, %This.employee, &current_status, &new_status);
      &notification.send();
   catch Exception &no_notification_defined
      rem WinMessage(&no_notification_defined.ToString());
   end-try;
   DoSaveNow();
   TransferPage(Page.IMSH_LADP_FORM);
   
end-method;

method status_back
   Local string &current_status, &new_status;
   &current_status = %This.document.status;
   %This.document.status_back();
   &new_status = %This.document.status;
   try
      Local IMSH_LADP:Base:LadpNotification &notification = %This.notification_factory.create_notification(%This.document, %This.employee, &current_status, &new_status);
      &notification.send();
   catch Exception &no_notification_defined
      rem WinMessage(&no_notification_defined.ToString());
   end-try;
   DoSaveNow();
   TransferPage(Page.IMSH_LADP_FORM);
end-method;

method initialize_dev_plan_item
   Local object &this_record = CreateObject("IMSH_LADP:Models:DevelopmentPlan", GetRow().GetRecord(Record.IMSH_B_ITEM_VW));
end-method;

method initialize_education_item
end-method;

